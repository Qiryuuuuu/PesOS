using System;
using System.Reflection.Metadata;

namespace taxCalculator
{
    class Program
    {
        static void Main(string[] args)
        {
            string logo = @"

                                                                    
        ##### ##                             # ###       #######    
     ######  /###                          /  /###     /       ###  
    /#   /  /  ###                        /  /  ###   /         ##  
   /    /  /    ###                      /  ##   ###  ##        #   
       /  /      ##                     /  ###    ###  ###          
      ## ##      ##  /##       /###    ##   ##     ## ## ###        
      ## ##      ## / ###     / #### / ##   ##     ##  ### ###      
    /### ##      / /   ###   ##  ###/  ##   ##     ##    ### ###    
   / ### ##     / ##    ### ####       ##   ##     ##      ### /##  
      ## ######/  ########    ###      ##   ##     ##        #/ /## 
      ## ######   #######       ###     ##  ##     ##         #/ ## 
      ## ##       ##              ###    ## #      /           # /  
      ## ##       ####    /  /###  ##     ###     /  /##        /   
      ## ##        ######/  / #### /       ######/  /  ########/    
 ##   ## ##         #####      ###/          ###   /     #####      
###   #  /                                         |                
 ###    /                                           \)              .
  #####/                                                            
    ###                                                             

";

            Console.WriteLine(logo);
            Console.WriteLine("Welcome to the testing environment");

            settings consoleSettings = new settings(); 

            while (true)
            {
                Console.WriteLine("");
                Console.Write("Input: ");
                var input = Console.ReadLine();

                string[] splitted = input.Split(" ");
                switch (splitted[0])
                {
                    case "taxtable":
                        Console.WriteLine("The Income Tax Table - Individual");
                        Console.WriteLine("-------------------------------------------------------------------------");
                        Console.WriteLine("|   Over    | But not Over |                 Tax Rate                   |");
                        Console.WriteLine("-------------------------------------------------------------------------");
                        Console.WriteLine("|    ---    |    250,000   |                    0%                      |");
                        Console.WriteLine("|  250,000  |    400,000   |         15% of excess over 250,000         |");
                        Console.WriteLine("|  400,000  |    800,000   |     22,500 + 20% of excess over 400,000    |");
                        Console.WriteLine("|  800,000  |   2,000,000  |     102,500 + 25% of excess over 800,000   |");
                        Console.WriteLine("| 2,000,000 |   8,000,000  |    402,500 + 30% of excess over 2,000,000  |");
                        Console.WriteLine("| 8,000,000 |      ---     |  2,202,500 + 35% of excess over 8,000,000  |");
                        Console.WriteLine("-------------------------------------------------------------------------");
                        Console.WriteLine("Department of Finance - Tax Schedule Effective January 1, 2023 and onwards");
                        break;

                    case "taxcalcu":
                        do
                        {
                            Console.Write("Enter Annual Income: ");
                            var incomeStr = Console.ReadLine();

                            TaxCalculator taxCalculator = new TaxCalculator();
                            taxCalculator.CalculateTax(incomeStr);

                            Console.WriteLine("Do you want to calculate tax again? (Type 'Yes' or 'No')");
                            var repeat = Console.ReadLine().Trim().ToLower();

                            if (repeat != "yes" && repeat != "y")
                            {
                                break;
                            }

                        } while (true);
                        break;

                    case "settings":
                            Console.WriteLine("0 - Back");
                            Console.WriteLine("1 - Change color\n");
                            Console.Write("input: ");
                            var setInput = Console.ReadLine();

                            if (setInput == "1")
                            {
                                Console.WriteLine("0 - Back");
                                Console.WriteLine("1 - Change Font Color");
                                Console.WriteLine("2 - Change Background Color");

                                Console.Write("input: ");
                                var color = Console.ReadLine();

                                if (color == "0")
                                {
                                    Console.Clear();
                                    Console.WriteLine("Welcome to the testing environment");
                                    break;
                                }

                                else if (color == "1")
                                {
                                    consoleSettings.fontColor();
                                }

                                else if (color == "2")
                                {
                                    consoleSettings.backGroundColor();
                                }
                                else
                                {
                                    Console.WriteLine("Please choose a valid option");
                                }
                            }
                            else if (setInput == "0"){
                                Console.Clear();
                                Console.WriteLine("Welcome to the testing environment");
                                break;
                            }
                            else
                            {
                                Console.WriteLine("Please choose a valid option");
                            }
                        break;

                    default:
                        Console.WriteLine("Command not found");
                        break;
                }
            }
        }
    }

    //This is method contains the calculator for income tax 
    public class TaxCalculator
    {
        public void CalculateTax(string incomeStr)
        {
            if (int.TryParse(incomeStr, out int income))
            {
                if (income >= 0 && income <= 250000)
                {
                    Console.WriteLine($"There is no tax for income that is not over 250000");
                    Console.WriteLine($"Annual Gross Income: {incomeStr}");
                }
                else if (income > 250000 && income <= 400000)
                {
                    decimal excessStrata = income - 250000;
                    decimal annualNetIncome = excessStrata * .15m;
                    decimal result = income - annualNetIncome;
                    Console.WriteLine($"Annual Net Income: {result}");
                }
                else if (income > 400000 && income <= 800000)
                {
                    decimal twentyPercent = 22500 + .20m * income;
                    decimal result = income - twentyPercent;
                    Console.WriteLine($"22,500 + 20% of {incomeStr} is: {result}");
                }
                else if (income > 800000 && income <= 2000000)
                {
                    decimal twentyFivePercent = 102500 + .25m * income;
                    decimal result = income - twentyFivePercent;
                    Console.WriteLine($"22,500 + 25% of {incomeStr} is: {result}");
                }
                else if (income > 2000000 && income <= 8000000)
                {
                    decimal thirtyPercent = 402500 + .30m * income;
                    decimal result = income - thirtyPercent;
                    Console.WriteLine($"402,500 + 30% of {incomeStr} is: {result}");
                }
                else if (income > 8000000)
                {
                    decimal thirtyFivePercent = 2202500 + .35m * income;
                    decimal result = income - thirtyFivePercent;
                    Console.WriteLine($"2,202,500 + 35% of {incomeStr} is: {result}");
                }
            }
            else
            {
                Console.WriteLine("Invalid input. Please enter a valid number for income.");
            }

        }
    }


    public class settings
    {
        public void fontColor()
        {
            Console.WriteLine("Here are the available colors");

            ConsoleColor[] consoleColors =
            (ConsoleColor[])ConsoleColor.GetValues(typeof(ConsoleColor));
            foreach (var color in consoleColors)
            {
                Console.ForegroundColor = color;
                Console.WriteLine($"{color}");
            }
            Console.Write("Choose a Font Color: ");
            var userColor = Console.ReadLine();
            Console.Clear();
            switch(userColor)
            {
                case "black":
                    Console.ForegroundColor = ConsoleColor.Black;
                    break;
                case "darkblue":
                    Console.ForegroundColor = ConsoleColor.DarkBlue;
                    break;
                case "darkgreen":
                    Console.ForegroundColor = ConsoleColor.DarkGreen;
                    break;
                case "darkcyan":
                    Console.ForegroundColor = ConsoleColor.DarkCyan;
                    break;
                case "darkred":
                    Console.ForegroundColor = ConsoleColor.DarkRed;
                    break;
                case "darkmagenta":
                    Console.ForegroundColor = ConsoleColor.DarkMagenta;
                    break;
                case "darkyellow":
                    Console.ForegroundColor = ConsoleColor.DarkYellow;
                    break;
                case "gray":
                    Console.ForegroundColor = ConsoleColor.Gray;
                    break;
                case "darkgray":
                    Console.ForegroundColor = ConsoleColor.DarkGray;
                    break;
                case "blue":
                    Console.ForegroundColor = ConsoleColor.Blue;
                    break;
                case "green":
                    Console.ForegroundColor = ConsoleColor.Green;
                    break;
                case "cyan":
                    Console.ForegroundColor = ConsoleColor.Cyan;
                    break;
                case "red":
                    Console.ForegroundColor = ConsoleColor.Red;
                    break;
                case "magenta":
                    Console.ForegroundColor = ConsoleColor.Magenta;
                    break;
                case "yellow":
                    Console.ForegroundColor = ConsoleColor.Yellow;
                    break;
                case "white":
                    Console.ForegroundColor = ConsoleColor.White;
                    break;
                default:
                    Console.WriteLine($"{userColor} is not an available");
                    break;
            }         
        }


        public void backGroundColor()
        {
            ConsoleColor originalForeColor = Console.ForegroundColor;
            Console.WriteLine("Here are the available colors");
            ConsoleColor[] consoleColors = 
            (ConsoleColor[])ConsoleColor.GetValues(typeof(ConsoleColor));
            foreach (var color in consoleColors)
            {
                Console.ForegroundColor = color;
                Console.WriteLine($"{color}");
            }
            Console.Write("Choose Your Background Color: ");
            var userInput = Console.ReadLine();
            Console.Clear();

            switch (userInput)
            {
                case "black":
                    Console.BackgroundColor = ConsoleColor.Black;
                    break;
                case "darkblue":
                    Console.BackgroundColor = ConsoleColor.DarkBlue;
                    break;
                case "darkgreen":
                    Console.BackgroundColor = ConsoleColor.DarkGreen;
                    break;
                case "darkcyan":
                    Console.BackgroundColor = ConsoleColor.DarkCyan;
                    break;
                case "darkred":
                    Console.BackgroundColor = ConsoleColor.DarkRed;
                    break;
                case "darkmagenta":
                    Console.BackgroundColor = ConsoleColor.DarkMagenta;
                    break;
                case "darkyellow":
                    Console.BackgroundColor = ConsoleColor.DarkYellow;
                    break;
                case "gray":
                    Console.BackgroundColor = ConsoleColor.Gray;
                    break;
                case "darkgray":
                    Console.BackgroundColor = ConsoleColor.DarkGray;
                    break;
                case "blue":
                    Console.BackgroundColor = ConsoleColor.Blue;
                    break;
                case "green":
                    Console.BackgroundColor = ConsoleColor.Green;
                    break;
                case "cyan":
                    Console.BackgroundColor = ConsoleColor.Cyan;
                    break;
                case "red":
                    Console.BackgroundColor = ConsoleColor.Red;
                    break;
                case "magenta":
                    Console.BackgroundColor = ConsoleColor.Magenta;
                    break;
                case "yellow":
                    Console.BackgroundColor = ConsoleColor.Yellow;
                    break;
                case "white":
                    Console.BackgroundColor = ConsoleColor.White;
                    break;
                default:
                    Console.WriteLine($"{userInput} is not an available");
                    break;
            }
            Console.ForegroundColor = originalForeColor;

        }

    }
}
